locations:
  pre_table1:
  - {x: 2.250, y: 3.118, theta: 0, frame: "map"}
  table1:
  - {x: 2.750, y: 3.118, theta: 0, frame: "map"}
  post_table1:
  - {x: 2.250, y: 3.118, theta: 3.14, frame: "map"}
  pre_table2:
  - {x: -3.53, y: 3.75, theta: 1.57, frame: "map"}
  table2:
  - {x: -3.53, y: 4.15, theta: 1.57, frame: "map"}
  post_table2:
  - {x: -3.53, y: 3.75, theta: 4.71, frame: "map"}

objects:
  cube:
    bounds: { xmin: 0.025, xmax: 0.13, ymin: 0.025, ymax: 0.13, zmin: 0.025, zmax: 0.13 }
    location: { xmin: -.inf, xmax: .inf, ymin: -.inf, ymax: .inf, zmin: 0.5, zmax: .inf }

poses:
  tuck: [1.32, 1.47, -0.20, 1.65, 0.00, 1.66, 0.00]
  ready: [1.55, -0.91, 0.98, -1.18, 0.14, -1.06, 0.0]
  stow: [1.32, -0.46, 2.76, 1.19, 0.00, 0.82, 0.00]
  drop: [0.54, 0.06, 1.31, -1.15, 1.61, -1.68, 0.0]

trajectories:
  tuck_to_stow:
  - [1.32, 1.47, -0.20, 1.65, 0.00, 1.66, 0.00]
  - [1.32, 1.47, -1.58, 1.65, 0.00, 1.66, 0.00]
  - [1.32, -0.46, -1.58, 1.65, 0.00, 1.66, 0.00]
  - [1.32, -0.46, -1.58, 1.65, 0.00, 0.82, 0.00]
  - [1.32, -0.46, 2.76, 1.19, 0.00, 0.82, 0.00]
  stow_to_tuck:
  - [1.32, -0.46, 2.76, 1.19, 0.00, 0.82, 0.00]
  - [1.32, -0.46, -1.58, 1.65, 0.00, 0.82, 0.00]
  - [1.32, -0.46, -1.58, 1.65, 0.00, 1.66, 0.00]
  - [1.32, 1.47, -1.58, 1.65, 0.00, 1.66, 0.00]
  - [1.32, 1.47, -0.20, 1.65, 0.00, 1.66, 0.00]

tasks:
  # Perception is a task comprising of the find_objects and find_grasps subtasks
  perceive:
    params:
    - obj

    var:
    - cube_idx
    - grasps

    steps:
    - action: find_object
      params:
        obj: params.obj
      var:
      - found_idx
      - found_obj

    - action: find_grasps
      params:
        segmented_obj: var.found_obj
      var:
      - grasps

    - op: assign
      params:
        var_name: cube_idx
        value: var.found_idx
      var:
      - cube_idx

  # Approaching a pickup or dropoff location
  approach:
    params:
      - pre_loc
      - loc

    steps:
    # Move to the location and untuck the arm. Assume the torso is 0 and arm
    # is tucked
    - action: move
      params:
        location: params.pre_loc

    - action: torso
      params:
        height: 0.4

    - action: arm
      params:
        poses: trajectories.tuck_to_stow

    # Clear out the costmap
    - action: look
      params:
        pose: {x: 1.5, y: 0.0, z: -1.0, frame: "base_link"}

    - action: look
      params:
        pose: {x: 50.0, y: 0.0, z: -1.0, frame: "base_link"}

    # Move to the actual location and put the arm in ready
    - action: move
      params:
        location: params.loc

    - action: arm
      params:
        poses: poses.ready

  # Departing a pickup or dropoff location.
  depart:
    params:
      - loc
      - post_loc

    steps:
    # Set the arm to ready, and then to stow. Assume the torso is at max height
    - action: arm
      params:
        poses: poses.ready

    - action: arm
      params:
        poses: poses.stow

    - action: move
      params:
        location: params.post_loc

    - action: arm
      params:
        poses: trajectories.stow_to_tuck

    - action: torso
      params:
        height: 0.0

  # Task used for testing subsets of the main task
  test:
    steps:
    - action: torso
      params:
        height: 0.4

    - action: arm
      params:
        poses: poses.stow

    - action: arm
      params:
        poses: poses.ready

    - action: look
      params:
        pose: {x: 1.8, y: 0.0, z: -1.0, frame: "base_link"}

    - task: perceive
      params:
        obj: objects.cube
      var:
      - cube_idx
      - grasps

    - action: pick
      params:
        cube_idx: var.cube_idx
        grasps: var.grasps

    - action: arm
      params:
        poses: poses.ready

    - action: arm
      params:
        poses: poses.stow

    - action: arm
      params:
        poses: poses.ready

    - action: look
      params:
        pose: {x: 1.5, y: 0.0, z: -1.0, frame: "base_link"}

    - action: place

    - action: arm
      params:
        poses: poses.ready

    - action: arm
      params:
        poses: poses.stow

  # The main fetch and deliver task that we want to make robust
  main:
    steps:
    - action: torso
      params:
        height: 0.4

    - action: arm
      params:
        poses: poses.tuck

    - action: torso
      params:
        height: 0.0

    - task: approach
      params:
        pre_loc: locations.pre_table1
        loc: locations.table1

    - action: look
      params:
        pose: {x: 1.5, y: 0.0, z: -1.0, frame: "base_link"}

    - task: perceive
      params:
        obj: objects.cube
      var:
      - cube_idx
      - grasps

    - action: pick
      params:
        cube_idx: var.cube_idx
        grasps: var.grasps

    - task: depart
      params:
        loc: locations.table1
        post_loc: locations.post_table1

    - task: approach
      params:
        pre_loc: locations.pre_table2
        loc: locations.table2

    - action: look
      params:
        pose: {x: 1.5, y: 0.0, z: -1.0, frame: "base_link"}

    - action: place

    - task: depart
      params:
        loc: locations.table2
        post_loc: locations.post_table2
